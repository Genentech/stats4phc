% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calibrationProfile.R
\name{calibrationProfile}
\alias{calibrationProfile}
\title{Calibration plot}
\usage{
calibrationProfile(
  outcome,
  score,
  methods = list(gam = list(method = "gam", fitonPerc = FALSE)),
  include = c("loess", "citl"),
  plot.raw = TRUE,
  rev.order = FALSE,
  margin.type = NULL,
  ...
)
}
\arguments{
\item{outcome}{Vector of binary outcome for each observation.}

\item{score}{Numeric vector of continuous predicted risk score.}

\item{methods}{Character vector of method names (case-insensitive) for plotting curves or
a named list where elements are method function and its arguments.
Default is set to \code{list(gam = list(method = "gam", fitonPerc = FALSE))}.

Full options are: \code{c("binned", "pava", "mspline", "gam", "cgam")}.

To specify arguments per method, use lists. For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
  pava = list(method = "pava", ties = "primary"),
  mspline = list(method = "mspline", fitonPerc = TRUE),
  gam = list(method = "gam", bs = "tp", logscores = FALSE),
  bin = list(method = "binned", bins = 10),
)
}\if{html}{\out{</div>}}

See section "Estimation" for more details.}

\item{include}{Character vector (case-insensitive, partial matching) or \code{NULL} specifying
what quantities to include in the plot.

Default is: \code{c("loess", "citl")}.

Full options are: \code{c("loess", "citl", "rug", "datapoints")} or \code{NULL}.
"loess" adds a Loess fit, "citl" stands for "Calibration in the large",
"rug" adds rug ticks of \code{score} by \code{outcome} (top x-axis: \code{score} for \code{outcome == 1},
bottom x-axis: \code{score} for \code{outcome == 0}),
"datapoints" adds jittered \code{score} by \code{outcome} (slightly shifted away from 0 / 1 y-values),
"\code{NULL}" stands for no extra information.}

\item{plot.raw}{Logical to show percentiles or raw values.
Defaults to \code{TRUE} (i.e. raw \code{score}).}

\item{rev.order}{Logical to reverse ordering of scores. Defaults to \code{FALSE}.}

\item{margin.type}{Type of additional margin plot, can be one of
\code{c("density", "histogram", "boxplot", "violin", "densigram")}.
See \code{\link[ggExtra:ggMarginal]{ggExtra::ggMarginal()}} for more details.}

\item{...}{Additional arguments passed to \code{\link[ggExtra:ggMarginal]{ggExtra::ggMarginal()}}.}
}
\value{
A list containing the plot and data, plus \code{citl} data if they were requested.
}
\description{
Calibration curve risk estimates
}
\section{Estimation}{

The \code{methods} argument specifies the estimation method.
You can provide either a vector of strings, any of

\if{html}{\out{<div class="sourceCode">}}\preformatted{c("asis", "binned", "pava", "mspline", "gam", "cgam")
}\if{html}{\out{</div>}}

(\code{"asis"} is not available for \code{calibrationProfile}),
or a named list of lists.
In the latter case, the inner list must have an element "method",
which specifies the estimation function (one of those above),
and optionally other elements, which are passed to the estimation function.
For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
  gam = list(method = "gam", k = 3),
  c_gam = list(method = "cgam", numknots = 3)
)
}\if{html}{\out{</div>}}

To see what arguments are available for each estimation method,
see the documentation of that function.
The naming convention is \code{getXest},
where \code{X} stands for the estimation method, for example \code{\link[=getGAMest]{getGAMest()}}.

"gam", "cgam", and "mspline" always fit on percentiles by default.
To change this, use \code{fitonPerc = FALSE}, for example

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(gam = list(method = "gam", fitonPerc = FALSE))
}\if{html}{\out{</div>}}

"gam" and "cgam" methods are wrappers of \code{\link[mgcv:gam]{mgcv::gam()}} and \code{\link[cgam:cgam]{cgam::cgam()}}, respectively.
The default values of function arguments (like \code{k}, the number of knots in \code{\link[mgcv:s]{mgcv::s()}})
mirror the package defaults.
}

\examples{
# Read in example data
auroc <- read.csv(system.file("extdata", "sample.csv", package = "stats4phc"))
rscore <- auroc$predicted_calibrated
truth <- as.numeric(auroc$actual)

# Default calibration plot
p1 <- calibrationProfile(outcome = truth, score = rscore)
p1$plot

# Specifying multiple estimation methods
# By default, all the methods fit on percentiles
calibrationProfile(
  outcome = truth,
  score = rscore,
  methods = c("gam", "mspline", "binned")
)$plot

# Specifying multiple estimation methods with parameters
calibrationProfile(
  outcome = truth,
  score = rscore,
  methods = list(
    gam = list(method = "gam", fitonPerc = FALSE, k = 3),
    mspline = list(method = "mspline"),
    bin = list(method = "binned", quantiles = 5)
  )
)$plot

# Additional quantities and marginal histogram with specified number of bins
calibrationProfile(
  outcome = truth,
  score = rscore,
  include = c("rug", "datapoints", "citl"),
  # or use partial matching: include = c("r", "d", "c"),
  margin.type = "histogram",
  bins = 100 # passed to ggExtra::ggMarginal
)$plot

}
\seealso{
\code{\link[=riskProfile]{riskProfile()}} \code{\link[=sensSpec]{sensSpec()}}

\code{\link[=getPAVAest]{getPAVAest()}} \code{\link[=getBINNEDest]{getBINNEDest()}} \code{\link[=getGAMest]{getGAMest()}} \code{\link[=getCGAMest]{getCGAMest()}} \code{\link[=getMSPLINEest]{getMSPLINEest()}}
\code{\link[=getASISest]{getASISest()}}
}
