% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensSpec.R
\name{sensSpec}
\alias{sensSpec}
\title{Sensitivity and specificity plot}
\usage{
sensSpec(
  outcome,
  score,
  methods = "asis",
  show.best = TRUE,
  plot.raw = FALSE,
  rev.order = FALSE
)
}
\arguments{
\item{outcome}{Vector of binary outcome for each observation.}

\item{score}{Numeric vector of continuous predicted risk score.}

\item{methods}{Character vector of method names (case-insensitive) for plotting curves or
a named list where elements are method function and its arguments.
Default is set to \code{"asis"}.

Full options are: \code{c("asis", "binned", "pava", "mspline", "gam", "cgam")}.

To specify arguments per method, use lists. For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
  pava = list(method = "pava", ties = "primary"),
  mspline = list(method = "mspline", fitonPerc = TRUE),
  gam = list(method = "gam", bs = "tp", logscores = FALSE),
  bin = list(method = "binned", bins = 10),
  risk = list(method = "asis")
)
}\if{html}{\out{</div>}}

See section "Estimation" for more details.}

\item{show.best}{Logical; Include best possible sensitivity and specificity? Defaults to \code{TRUE}.}

\item{plot.raw}{Logical to show percentiles or raw values.
Defaults to \code{FALSE} (i.e. percentiles).}

\item{rev.order}{Logical, reverse ordering of scores. Defaults to \code{FALSE}.}
}
\value{
A list containing the plot and data.
}
\description{
Sensitivity and specificity risk estimates
}
\details{
Given individual binary outcomes and scores, this function plots sensitivity and specificity
(using each score as a cutoff) on their respective score percentiles.
}
\section{Estimation}{

The \code{methods} argument specifies the estimation method.
You can provide either a vector of strings, any of

\if{html}{\out{<div class="sourceCode">}}\preformatted{c("asis", "binned", "pava", "mspline", "gam", "cgam")
}\if{html}{\out{</div>}}

(\code{"asis"} is not available for \code{calibrationProfile}),
or a named list of lists.
In the latter case, the inner list must have an element "method",
which specifies the estimation function (one of those above),
and optionally other elements, which are passed to the estimation function.
For example:

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(
  gam = list(method = "gam", k = 3),
  c_gam = list(method = "cgam", numknots = 3)
)
}\if{html}{\out{</div>}}

To see what arguments are available for each estimation method,
see the documentation of that function.
The naming convention is \code{getXest},
where \code{X} stands for the estimation method, for example \code{\link[=getGAMest]{getGAMest()}}.

"gam", "cgam", and "mspline" always fit on percentiles by default.
To change this, use \code{fitonPerc = FALSE}, for example

\if{html}{\out{<div class="sourceCode">}}\preformatted{list(gam = list(method = "gam", fitonPerc = FALSE))
}\if{html}{\out{</div>}}

"gam" and "cgam" methods are wrappers of \code{\link[mgcv:gam]{mgcv::gam()}} and \code{\link[cgam:cgam]{cgam::cgam()}}, respectively.
The default values of function arguments (like \code{k}, the number of knots in \code{\link[mgcv:s]{mgcv::s()}})
mirror the package defaults.
}

\examples{
# Read in example data
auroc <- read.csv(system.file("extdata", "sample.csv", package = "stats4phc"))
rscore <- auroc$predicted_calibrated
truth <- as.numeric(auroc$actual)

# Plot sensitivity and specificity
p1 <- sensSpec(outcome = truth, score = rscore)
p1$plot

# Same with smoothed estimates
p2 <- sensSpec(outcome = truth, score = rscore, methods = c("asis", "gam"))
p2$plot

}
\seealso{
\code{\link[=riskProfile]{riskProfile()}} \code{\link[=calibrationProfile]{calibrationProfile()}}

\code{\link[=getPAVAest]{getPAVAest()}} \code{\link[=getBINNEDest]{getBINNEDest()}} \code{\link[=getGAMest]{getGAMest()}} \code{\link[=getCGAMest]{getCGAMest()}} \code{\link[=getMSPLINEest]{getMSPLINEest()}}
\code{\link[=getASISest]{getASISest()}}
}
